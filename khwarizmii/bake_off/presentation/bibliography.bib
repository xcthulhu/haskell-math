
@article{mengAutomationInteractiveProof2006,
  langid = {english},
  title = {Automation for Interactive Proof: {{First}} Prototype},
  volume = {204},
  issn = {08905401},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S0890540106000642},
  doi = {10.1016/j.ic.2005.05.010},
  shorttitle = {Automation for Interactive Proof},
  number = {10},
  journaltitle = {Information and Computation},
  shortjournal = {Information and Computation},
  urldate = {2019-12-30},
  date = {2006-10},
  pages = {1575-1596},
  author = {Meng, Jia and Quigley, Claire and Paulson, Lawrence C.},
  file = {/home/mpwd/snap/zotero-snap/4/Zotero/storage/33YTPYTW/Meng et al. - 2006 - Automation for interactive proof First prototype.pdf}
}

@inproceedings{paulsonSourceLevelProofReconstruction2007,
  langid = {english},
  location = {{Berlin, Heidelberg}},
  title = {Source-{{Level Proof Reconstruction}} for {{Interactive Theorem Proving}}},
  isbn = {978-3-540-74591-4},
  doi = {10.1007/978-3-540-74591-4_18},
  abstract = {Interactive proof assistants should verify the proofs they receive from automatic theorem provers. Normally this proof reconstruction takes place internally, forming part of the integration between the two tools. We have implemented source-level proof reconstruction: resolution proofs are automatically translated to Isabelle proof scripts. Users can insert this text into their proof development or (if they wish) examine it manually. Each step of a proof is justified by calling Hurd’s Metis prover, which we have ported to Isabelle. A recurrent issue in this project is the treatment of Isabelle’s axiomatic type classes.},
  booktitle = {Theorem {{Proving}} in {{Higher Order Logics}}},
  series = {Lecture {{Notes}} in {{Computer Science}}},
  publisher = {{Springer}},
  date = {2007},
  pages = {232-245},
  keywords = {Inference Rule,Interactive Proof,Type Class,Type Information,Type Variable},
  author = {Paulson, Lawrence C. and Susanto, Kong Woei},
  editor = {Schneider, Klaus and Brandt, Jens},
  file = {/home/mpwd/snap/zotero-snap/4/Zotero/storage/QS95BUN9/Paulson and Susanto - 2007 - Source-Level Proof Reconstruction for Interactive .pdf}
}

@inproceedings{hurdFirstorderProofTactics2003,
  title = {First-Order Proof Tactics in Higher-Order Logic Theorem Provers},
  abstract = {Abstract. In this paper we evaluate the effectiveness of first-order proof procedures when used as tactics for proving subgoals in a higher-order logic interactive theorem prover. We first motivate why such first-order proof tactics are useful, and then describe the core integrating technology: an ‘LCFstyle’ logical kernel for clausal first-order logic. This allows the choice of different logical mappings between higher-order logic and first-order logic to be used depending on the subgoal, and also enables several different first-order proof procedures to cooperate on constructing the proof. This work was carried out using the HOL4 theorem prover; we comment on the ease of transferring the technology to other higher-order logic theorem provers. 1},
  booktitle = {Design and {{Application}} of {{Strategies}}/{{Tactics}} in {{Higher Order Logics}}, Number {{NASA}}/{{CP}}-2003-212448 in {{NASA Technical Reports}}},
  date = {2003},
  pages = {56--68},
  author = {Hurd, Joe},
  file = {/home/mpwd/snap/zotero-snap/4/Zotero/storage/FI89DFRS/Hurd - 2003 - First-order proof tactics in higher-order logic th.pdf;/home/mpwd/snap/zotero-snap/4/Zotero/storage/GTPJ8XBY/summary.html}
}

@article{czajkaHammerCoqAutomation2018,
  langid = {english},
  title = {Hammer for {{Coq}}: {{Automation}} for {{Dependent Type Theory}}},
  volume = {61},
  issn = {1573-0670},
  url = {https://doi.org/10.1007/s10817-018-9458-4},
  doi = {10.1007/s10817-018-9458-4},
  shorttitle = {Hammer for {{Coq}}},
  abstract = {Hammers provide most powerful general purpose automation for proof assistants based on HOL and set theory today. Despite the gaining popularity of the more advanced versions of type theory, such as those based on the Calculus of Inductive Constructions, the construction of hammers for such foundations has been hindered so far by the lack of translation and reconstruction components. In this paper, we present an architecture of a full hammer for dependent type theory together with its implementation for the Coq proof assistant. A key component of the hammer is a proposed translation from the Calculus of Inductive Constructions, with certain extensions introduced by Coq, to untyped first-order logic. The translation is “sufficiently” sound and complete to be of practical use for automated theorem provers. We also introduce a proof reconstruction mechanism based on an eauto-type algorithm combined with limited rewriting, congruence closure and some forward reasoning. The algorithm is able to re-prove in the Coq logic most of the theorems established by the ATPs. Together with machine-learning based selection of relevant premises this constitutes a full hammer system. The performance of the whole procedure is evaluated in a bootstrapping scenario emulating the development of the Coq standard library. For each theorem in the library only the previous theorems and proofs can be used. We show that 40.8\% of the theorems can be proved in a push-button mode in about 40 s of real time on a 8-CPU system.},
  number = {1},
  journaltitle = {Journal of Automated Reasoning},
  shortjournal = {J Autom Reasoning},
  urldate = {2019-12-30},
  date = {2018-06-01},
  pages = {423-453},
  author = {Czajka, Lukasz and Kaliszyk, Cezary},
  file = {/home/mpwd/snap/zotero-snap/4/Zotero/storage/GXKFS3KK/Czajka and Kaliszyk - 2018 - Hammer for Coq Automation for Dependent Type Theo.pdf}
}


